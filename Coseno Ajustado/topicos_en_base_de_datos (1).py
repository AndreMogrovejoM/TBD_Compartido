# -*- coding: utf-8 -*-
"""Topicos en Base de datos

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vgwWklkiZ8zn8Bse6nqLoHLzG01r4Exa
"""

import pandas as pd
import numpy as np
import math
from time import time
import csv
import os.path
from os import path
#from google.colab import drive
#drive.mount('/content/drive')

"""Cargando base de datos"""

#df = pd.read_csv('/content/drive/My Drive/Colab Notebooks/Movie_Ratings.csv')
#archivo = 'BX-Book-Ratings'
#df = df.rename({'Unnamed: 0':'peliculas'}, axis=1)

archivo = 'ratings'
#path.exists('guru99.txt')
Cache_Item = None
Cache_usuarios_peliculas1=None
Cache_peliculas1=None

def cargar(ubicacion,delimit,heade=None):
    pd_chunk = pd.read_csv(ubicacion, chunksize= 1000000, delimiter=delimit,header=heade,error_bad_lines=False)
    list_chunk = []

    for chunk in pd_chunk:
        list_chunk.append(chunk)
    df_concat = pd.concat(list_chunk)
    return df_concat

df = cargar(archivo+".csv",',')
"""
seleciono pelicula
obtengo usuarios con rating a mi pelicula
Agarro a esos usuarios y consulto a que peliculas han puntuado
Comparo la pelicula con las peliculas que han rakiado mis usuarios

"""
def peliculas(item1):
  peliculas1 = df.loc[df.loc[:,1] == item1 ]
  usuarios_peliculas1 = peliculas1[0].to_numpy()
  peliculas = df.loc[df.loc[:,0].isin(usuarios_peliculas1)][1].drop_duplicates()

  return peliculas.values

def preprocesamiento_movie(item1,item2):

  peliculas1 = df.loc[df.loc[:,1] == item1]
  peliculas2 = df.loc[df.loc[:,1] == item2]
  usuarios_peliculas1 = peliculas1[0].to_numpy()
  usuarios_peliculas2 = peliculas2[0].to_numpy()
  usuarios_comunes = usuarios_peliculas1[np.in1d(usuarios_peliculas1, usuarios_peliculas2)]
  peliculas1 = peliculas1.loc[peliculas1.loc[:,0].isin(usuarios_comunes) ][2].to_numpy()
  peliculas2 = peliculas2.loc[peliculas2.loc[:,0].isin(usuarios_comunes) ][2].to_numpy()
  Cache_usuarios_peliculas1=usuarios_peliculas1
  Cache_peliculas1=peliculas1
  Cache_Item=item1
  return peliculas1, peliculas2 , usuarios_comunes

